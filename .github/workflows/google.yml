name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SVC_ACCOUNT: ${{ secrets.GCP_SVC_ACCOUNT }}
  GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/${{ secrets.GCP_SVC_ACCOUNT }}.json
  SVC_ACCOUNT_EMAIL: ${{ secrets.GCP_SVC_ACCOUNT }}@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com
  GAR_LOCATION:  ${{ vars.GCP_REGION }}
  GAR_REPOSITORY: ${{ vars.GCP_NAME }}
  CLOUD_RUN_SERVICE_NAME: 'estadistica' # Ej: my-awesome-app
  CLOUD_RUN_REGION: ${{ env.GCP_REGION }}

jobs:
  build-and-deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

        # Creates a credentials file that will be used for ADC later
      - name: Create credentials file
        run: |
          echo "${{ secrets.GCP_SVC_ACCOUNT_CREDS }}" | base64 --decode > $GOOGLE_APPLICATION_CREDENTIALS
          echo "Checking the credentials:"
          head -n 3 $GOOGLE_APPLICATION_CREDENTIALS
        shell: bash

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          service_account_key_file: '${{ env.GOOGLE_APPLICATION_CREDENTIALS }}'

      # Opcional: Si necesitas autenticar Docker con Artifact Registry (setup-gcloud a menudo lo maneja)
      # - name: Configure Docker
      #   run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }} .
          docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.CLOUD_RUN_SERVICE_NAME }}:latest . # Opcional: tag 'latest'

      - name: Push Docker image to Artifact Registry
        run: |
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }}
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.CLOUD_RUN_SERVICE_NAME }}:latest # Opcional: push 'latest'

      - name: Deploy to Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.CLOUD_RUN_SERVICE_NAME }}'
          region: '${{ env.CLOUD_RUN_REGION }}'
          image: '${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }}'
          # Opcional: --platform managed
          # Opcional: --allow-unauthenticated para permitir acceso p√∫blico
          # Opcional: Otras flags de gcloud run deploy, como variables de entorno, secretos, etc.
          # Ejemplo para permitir invocaciones no autenticadas:
          flags: '--allow-unauthenticated'

      # Opcional: Salida de la URL del servicio desplegado
      - name: Show Deployed URL
        run: |
          echo "Service URL: ${{ steps.deploy.outputs.url }}"
